name: CI/CD - Build, Push, Deploy

on:
  push:
    branches:
      - main

env:
  IMAGE_PREFIX: ${{ secrets.DOCKERHUB_USERNAME }}/fusionpact

jobs:
  build-and-push:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest
    outputs:
      backend_image: ${{ steps.backend_tag.outputs.image }}
      frontend_image: ${{ steps.frontend_tag.outputs.image }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push backend image
        id: backend_build
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_PREFIX }}-backend:latest
            ${{ env.IMAGE_PREFIX }}-backend:${{ github.sha }}

      - name: Expose backend image tag
        id: backend_tag
        run: echo "::set-output name=image::${{ env.IMAGE_PREFIX }}-backend:${{ github.sha }}"

      - name: Build & push frontend image
        id: frontend_build
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_PREFIX }}-frontend:latest
            ${{ env.IMAGE_PREFIX }}-frontend:${{ github.sha }}

      - name: Expose frontend image tag
        id: frontend_tag
        run: echo "::set-output name=image::${{ env.IMAGE_PREFIX }}-frontend:${{ github.sha }}"

  deploy:
    name: Deploy to EC2
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (for docker-compose.yml)
        uses: actions/checkout@v4

      - name: Install SSH client
        run: sudo apt-get update && sudo apt-get install -y openssh-client

      - name: Start ssh-agent and add key
        uses: webfactory/ssh-agent@v0.9x.1
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      - name: Copy docker-compose.yml to remote
        run: |
          scp -o StrictHostKeyChecking=no docker-compose.yml ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:${{ secrets.REMOTE_APP_DIR }}/docker-compose.yml

      - name: Trigger remote docker-compose pull & up
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          REMOTE_APP_DIR: ${{ secrets.REMOTE_APP_DIR }}
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} << 'EOF'
            set -e
            cd $REMOTE_APP_DIR
            # Pull latest images
            docker pull $DOCKERHUB_USERNAME/fusionpact-backend:latest || true
            docker pull $DOCKERHUB_USERNAME/fusionpact-frontend:latest || true
            # Start or update services
            docker-compose up -d --remove-orphans
            # Optional: health-check (curl your endpoint)
            sleep 3
            echo "Deployed. Containers:"
            docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Image}}"
          EOF
